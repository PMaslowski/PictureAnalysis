#pragma once


#include "utmpoint.h"

#include "vector"
#include "Point.h"
#include "cmath"

using namespace std;

class UtmCalculations
{
<<<<<<< HEAD
//public:
//	UtmCalculations();
//
//	static bool downCompare(UTMPoint point1, UTMPoint point2);
//	static bool leftCompare(UTMPoint point1, UTMPoint point2);
//	static void offset(vector< vector<double> > &utmPoints, UTMPoint leftPoint, UTMPoint downPoint);
//
//	enum Method
//	{
//		EuclideanMethod,
//		LinearMethod,
//		SimpsonsMethod,
//		IntegralMethod
//	};
//
//	static double Distance(double fromE, double fromN, double toE, double toN, Method method);
//	static UTMPoint LLtoUTM(int eId, double Lat, double Long, double& Northing, double& Easting, int& Zone);
//
//	static vector<vector<double> > Convert(vector<vector<double> > LLPoints);
//
//
//
//
//
//
//
//private:
//
//	static constexpr double PI = 3.14159265;
//	static constexpr double deg2rad = PI / 180;
//	static constexpr double rad2deg = 180 / PI;
//	static constexpr double k0 = 0.9996;
//
//	static constexpr double FalseEasting = 500000.0;
//	static constexpr double EarthRadius = 6378137.0;
//	static constexpr  double ScaleFactor = 0.9996;
//
//	static double GetScaleFactor(double e);
//	static double Euclidean(double fromE, double fromN, double toE, double toN);
//	static double LinearAverage(double fromE, double fromN, double toE, double toN);
//
//	static double Simpsons(double fromE, double fromN, double toE, double toN);
//	static double Integral(double fromE, double fromN, double toE, double toN);
//
//
=======
public:
	UtmCalculations();

	vector<Point> Convert(vector<Point> LLPoints);

private:

	Point UtmCalculations::LLtoUTM(Point point);
	bool downCompare(UTMPoint point1, UTMPoint point2);
	bool leftCompare(UTMPoint point1, UTMPoint point2);
	void offset(vector<Point> &utmPoints, UTMPoint leftPoint, UTMPoint downPoint);

	double PI = 3.14159265;
	double deg2rad = PI / 180;
	double rad2deg = 180 / PI;
	double k0 = 0.9996;
>>>>>>> tetrahedralize

	double FalseEasting = 500000.0;
	double EarthRadius = 6378137.0;
	double ScaleFactor = 0.9996;

};


